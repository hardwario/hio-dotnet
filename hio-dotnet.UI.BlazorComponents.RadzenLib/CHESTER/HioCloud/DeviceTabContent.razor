@using Services
@using CHESTER.HioCloud.Models
@using Blazor.AceEditorJs
@using hio_dotnet.Common.Models

@inject HioCloudService HioCloudService

<h3>Device Details</h3>

<RadzenRow Style="margin-top:1rem;">
    <RadzenColumn>
        <RadzenStack Orientation="Orientation.Horizontal" Gap="1rem" AlignItems="AlignItems.Center">
            <RadzenLabel Text="Name: " />
            <RadzenText Text="@Device.Name" />
        </RadzenStack>
    </RadzenColumn>
</RadzenRow>
<RadzenRow Style="margin-top:1rem;">
    <RadzenColumn>
        <RadzenStack Orientation="Orientation.Horizontal" Gap="1rem" AlignItems="AlignItems.Center">
            <RadzenLabel Text="Id: " />
            <RadzenText Text="@Device.Id.ToString()" />
            <hio_dotnet.UI.BlazorComponents.RadzenLib.Common.Buttons.CopyButton IsJustIcon="true" TextToCopy="@Device.Id.ToString()" />
        </RadzenStack>
    </RadzenColumn>
</RadzenRow>


@if (Device.Messages.Count == 0)
{
    <RadzenRow Style="margin-top:2rem;">
        <RadzenColumn>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                <RadzenButton Text="Try To load Messages" Click="@LoadMessages" />
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
}
else 
{
    <RadzenRow Style="margin-top:2rem;">
        <RadzenColumn>
            <HioCloudMessagesList Messages="@Device.Messages" OnOpenMessageRequest="async (m) => await OnOpenMessageRequest.InvokeAsync(m)" />
        </RadzenColumn>
    </RadzenRow>
}

<hr style="margin-top:2rem;" />

<HioCloudFlattenJSONForDevice Device="@Device" HasTitle="true" />

@code {

    [Parameter] public Device Device { get; set; } = new Device();
    [Parameter] public EventCallback<Message> OnOpenMessageRequest { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            await LoadMessages();
        }
    }

    private async Task LoadMessages()
    {
        await HioCloudService.LoadDeviceMessages(Device.SpaceId.ToString(), Device.Id.ToString());

        Device.Messages = HioCloudService.Spaces.Where(s => s.Id == Device.SpaceId).First().Devices.Where(d => d.Id == Device.Id).First().Messages.ToList();

        await InvokeAsync(StateHasChanged);
    }
}
