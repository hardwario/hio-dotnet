@using hio_dotnet.Common.Config;
@using hio_dotnet.Common.Enums;
@using hio_dotnet.Common.Enums.LoRaWAN;
@using System.Text.RegularExpressions
@using System.Linq.Expressions;
@using hio_dotnet.UI.BlazorComponents.RadzenLib.Common.Buttons


<div class="card-container">
    <RadzenTemplateForm TItem="LoRaWANConfig" Data="@Config">
            <div class="card-heading">
                <h4>LoRaWAN Settings</h4>
            </div>
            <div class="config-block">
                <h5 class="config-heading">Antenna</h5>
                <RadzenRadioButtonList @bind-Value=@Config.Antenna TValue="AntennaType">
                    <Items>
                        <RadzenRadioButtonListItem Text="Internal" Value="AntennaType.Internal" />
                        <RadzenRadioButtonListItem Text="External" Value="AntennaType.External" />
                    </Items>
                </RadzenRadioButtonList>
            </div>
            <div class="config-grid">
                <div class="config-block">
                    <h5 class="config-heading">Network</h5>
                    <RadzenRadioButtonList @bind-Value=@Config.Network TValue="LoRaWANNetwork">
                        <Items>
                            <RadzenRadioButtonListItem Text="Private" Value="LoRaWANNetwork.Private" />
                            <RadzenRadioButtonListItem Text="Public" Value="LoRaWANNetwork.Public" />
                        </Items>
                    </RadzenRadioButtonList>
                </div>
                <div class="config-block">
                    <h5 class="config-heading">Band</h5>
                    <RadzenRadioButtonList @bind-Value=@Config.Band TValue="LoRaWANBand">
                        <Items>
                            <RadzenRadioButtonListItem Text="EU868" Value="LoRaWANBand.EU868" />
                            <RadzenRadioButtonListItem Text="US915" Value="LoRaWANBand.US915" />
                        </Items>
                    </RadzenRadioButtonList>
                </div>
                <div class="config-block">
                    <h5 class="config-heading">Class</h5>
                    <RadzenRadioButtonList @bind-Value=@Config.Class TValue="LoRaWANClass">
                        <Items>
                            <RadzenRadioButtonListItem Text="A" Value="LoRaWANClass.A" />
                            <RadzenRadioButtonListItem Text="C" Value="LoRaWANClass.C" />
                        </Items>
                    </RadzenRadioButtonList>
                </div>
                <div class="config-block">
                    <h5 class="config-heading">Mode</h5>
                    <RadzenRadioButtonList @bind-Value=@Config.Mode TValue="LoRaWANMode">
                        <Items>
                            <RadzenRadioButtonListItem Text="ABP" Value="LoRaWANMode.ABP" />
                            <RadzenRadioButtonListItem Text="OTAA" Value="LoRaWANMode.OTAA" />
                        </Items>
                    </RadzenRadioButtonList>
                </div>
            </div>

            <div class="config-grid">
                <div class="config-block">
                    <h5 class="config-heading">DevAddr</h5>
                    <RadzenTextBox Name="DevAddr" @bind-Value=@Config.DevAddr Placeholder="Enter DevAddr" Style="width:auto;" />
                    <CopyButton TextToCopy="@Config.DevAddr" IsJustIcon="true" />
                    <RadzenRequiredValidator Component="DevAddr" Text="DevAddr is required" />
                    <RadzenCustomValidator Component="DevAddr" Text="Invalid DevAddr. Must be 8 hex characters." Validator=@ValidateDevAddr />
                </div>
                <div class="config-block">
                    <h5 class="config-heading">DevEUI</h5>
                    <RadzenTextBox Name="DevEUI" @bind-Value=@Config.DevEui Placeholder="Enter DevEUI" Style="width:auto;" />
                    <CopyButton TextToCopy="@Config.DevEui" IsJustIcon="true" />
                    <RadzenRequiredValidator Component="DevEUI" Text="DevEUI is required" />
                    <RadzenCustomValidator Component="DevEUI" Text="Invalid DevEUI. Must be 16 hex characters." Validator=@ValidateDevEUI />
                </div>
                <div class="config-block">
                    <h5 class="config-heading">JoinEUI</h5>
                    <RadzenTextBox Name="JoinEUI" @bind-Value=@Config.JoinEui Placeholder="Enter JoinEUI" Style="width:auto;" />
                    <CopyButton TextToCopy="@Config.JoinEui" IsJustIcon="true" />
                    <RadzenRequiredValidator Component="JoinEUI" Text="JoinEUI is required" />
                    <RadzenCustomValidator Component="JoinEUI" Text="Invalid JoinEUI. Must be 16 hex characters." Validator=@ValidateJoinEUI />
                </div>
            </div>

            <div class="config-block margin-top">
                <h5 class="config-heading">AppKey</h5>
                <RadzenTextBox Name="AppKey" @bind-Value=@Config.AppKey Placeholder="Enter AppKey" Style="width:auto; min-width:24rem;" />
                <CopyButton TextToCopy="@Config.AppKey" IsJustIcon="true" />
                <RadzenRequiredValidator Component="AppKey" Text="AppKey is required" />
                <RadzenCustomValidator Component="AppKey" Text="Invalid AppKey. Must be 32 hex characters." Validator=@ValidateAppKey />
            </div>

            <div class="config-block margin-top">
                <h5 class="config-heading">AppSKey</h5>
                <RadzenTextBox Name="AppSKey" @bind-Value=@Config.AppSKey Placeholder="Enter AppSKey" Style="width:auto; min-width:24rem;" />
                <CopyButton TextToCopy="@Config.AppSKey" IsJustIcon="true" />
                <RadzenRequiredValidator Component="AppSKey" Text="AppSKey is required" />
                <RadzenCustomValidator Component="AppSKey" Text="Invalid AppSKey. Must be 32 hex characters." Validator=@ValidateAppSKey />
            </div>

            <div class="config-block margin-top">
                <h5 class="config-heading">NwkSKey</h5>
                <RadzenTextBox Name="NwkSKey" @bind-Value=@Config.NwkSKey Placeholder="Enter NwkSKey" Style="width:auto; min-width:24rem;" />
                <CopyButton TextToCopy="@Config.NwkSKey" IsJustIcon="true" />
                <RadzenRequiredValidator Component="NwkSKey" Text="NwkSKey is required" />
                <RadzenCustomValidator Component="NwkSKey" Text="Invalid NwkSKey. Must be 32 hex characters." Validator=@ValidateNwkSKey />
            </div>
    </RadzenTemplateForm>
</div>

@code {
    [Parameter] public LoRaWANConfig Config { get; set; } = new LoRaWANConfig();

    public LoRaWANConfig GetConfig()
    {
        return Config;
    }

    public async Task ParseLine(string line)
    {
        Config.ParseLine(line);
        await InvokeAsync(StateHasChanged);
    }

    public bool ValidateDevAddr()
    {
        return Validate8CharHex(Config.DevAddr);
    }
    public bool ValidateDevEUI()
    {
        return Validate16CharHex(Config.DevEui);
    }
    public bool ValidateJoinEUI()
    {
        return Validate16CharHex(Config.JoinEui);
    }
    public bool ValidateAppKey()
    {
        return Validate32CharHex(Config.AppKey);
    }
    public bool ValidateAppSKey()
    {
        return Validate32CharHex(Config.AppSKey);
    }
    public bool ValidateNwkSKey()
    {
        return Validate32CharHex(Config.NwkSKey);
    }

    public bool Validate8CharHex(string value)
    {
        
        string input = value as string;
        var res = !string.IsNullOrEmpty(input) && Regex.IsMatch(input, @"^[0-9A-Fa-f]{8}$");
        return res;
    }
    public bool Validate16CharHex(string value)
    {

        string input = value as string;
        var res = !string.IsNullOrEmpty(input) && Regex.IsMatch(input, @"^[0-9A-Fa-f]{16}$");
        return res;
    }
    public bool Validate32CharHex(string value)
    {

        string input = value as string;
        var res = !string.IsNullOrEmpty(input) && Regex.IsMatch(input, @"^[0-9A-Fa-f]{32}$");
        return res;
    }

}
