@using Services
@using CHESTER.HioCloud.Models

@inject HioCloudService HioCloudService

<h3>Space Details</h3>

<RadzenRow Style="margin-top:1rem;">
    <RadzenColumn>
        <RadzenStack Orientation="Orientation.Horizontal" Gap="1rem" AlignItems="AlignItems.Center">
            <RadzenLabel Text="Name: " />
            <RadzenText Text="@Space.Name" />
        </RadzenStack>
    </RadzenColumn>
</RadzenRow>
<RadzenRow Style="margin-top:1rem;">
    <RadzenColumn>
        <RadzenStack Orientation="Orientation.Horizontal" Gap="1rem" AlignItems="AlignItems.Center">
            <RadzenLabel Text="Space Id: " />
            <RadzenText Text="@Space.Id.ToString()" />
            <hio_dotnet.UI.BlazorComponents.Radzen.Common.Buttons.CopyButton IsJustIcon="true" TextToCopy="@Space.Id.ToString()" />
        </RadzenStack>
    </RadzenColumn>
</RadzenRow>

@if (Space.Devices.Count == 0)
{
    <RadzenRow Style="margin-top:2rem;">
        <RadzenColumn>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                <RadzenButton Text="Try To load Devices" Click="@LoadDevices" />
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
}
else
{
    <RadzenRow Style="margin-top:2rem;">
        <RadzenColumn>
            <HioCloudDevicesList @ref=devicesListRef Devices="@Space.Devices" OnOpenDeviceRequest="async (m) => await OnOpenDeviceRequest.InvokeAsync(m)" />
        </RadzenColumn>
    </RadzenRow>
}

@if (Space.Tags.Count == 0)
{
    <RadzenRow Style="margin-top:2rem;">
        <RadzenColumn>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                <RadzenButton Text="Try To load Tags" Click="@LoadTags" />
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
}
else
{
    <RadzenRow Style="margin-top:2rem;">
        <RadzenColumn>
            <HioCloudTagsList Tags="@Space.Tags" />
        </RadzenColumn>
    </RadzenRow>
}
<hr style="margin-top:1rem;"/>
<RadzenRow Style="margin-top:0.5rem;margin-bottom:1rem;">
    <RadzenColumn>
        <RadzenText Text="Create Dashboard for batch of devices:" />
    </RadzenColumn>
</RadzenRow>
<HioCloudConnectDevicesWithTBSteps Space="@Space" />

@code {
    [Parameter] public Space Space { get; set; } = new Space();
    [Parameter] public EventCallback<Device> OnOpenDeviceRequest { get; set; }

    private HioCloudDevicesList? devicesListRef;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            await LoadDevices();
            await LoadTags();
        }
    }

    private async Task LoadDevices()
    {
        await HioCloudService.LoadSpaceDevices(Space.Id.ToString());

        Space.Devices = HioCloudService.Spaces.Where(s => s.Id == Space.Id).First().Devices.ToList();

        await InvokeAsync(StateHasChanged);
    }

    private async Task LoadTags()
    {
        await HioCloudService.LoadTags(Space.Id.ToString());
        Space.Tags = HioCloudService.Spaces.Where(s => s.Id == Space.Id).First().Tags.ToList();
        await InvokeAsync(StateHasChanged);
    }
}
